type Env = [Map String Int]

def push_scope ! St Env =
  let env get
  put (Map.empty : env)

def pop_scope ! St Env =
  env :: rest <- get
  put rest

def lookup : String -> (State Env, Error String) = do
  env <- get
  match Map.lookup name env with
    Just value -> pure value
    None -> error ("unbound variable: " ++ name)

def insert (name: String) (value : Int) : State Env = do
  env :: rest <- get
  put (Map.insert name value env :: rest)