-- MiniML is a scripting language but there are no top level expressions.
-- Every MiniML script must have a main function that serves as the entry point.
fn main = 
  print "Hello World!"

-- Arithmetic
1 + 1
21 - 2
2 * 2
4 / 2
5 % 2
6^2

-- global let binding
let x = 1

-- local let binding
let y = 2 in x + y

-- global function binding
fn add x y = x + y

-- local function binding
fn add x y = x + y in add 1 2

-- if expression
if 1 = 1 then 1 else 2

-- elif
if x = y then 1 
elif x = z 
then 2 else 3

-- recursion
fn gcd a b =
  if b = 0 then a 
  else gcd b (a % b)

-- lambda expression
\a b -> a + b

-- lambda application
(\a b -> a + b) 1 2

-- lambdas can be assigned to variables
let gcd = \a b ->
  if b = 0 then a 
  else gcd b (a % b)

-- symbols like lisp
let foo = :foo
