module Base.Control.Monad ( Monad )

class Monad (m : Type -> Type) where
  (>>=) : m a -> (a -> m b) -> m b
  (>>) : m a -> m b -> m b
  join : m (m a) -> m a
  mapM : (a -> m b) -> List a -> m (List b)
  sequence : List (m a) -> m (List a)
  replicateM : Int -> m a -> m (List a)
  filterM : (a -> m Bool) -> List a -> m (List a)
  foldM : (a -> b -> m a) -> a -> List b -> m a