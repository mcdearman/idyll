root = class

class = "class" ident primaryConstructorParam* ('<:' ident)? ('=' classBody)?

classBody = (field | method | impl)+

impl = "impl" ident ('=' implBody)?

implBody = method+

primaryConstructorParam = ('val'|'var')? pat | ('(' pat ':' type ')')

field = ('val'|'var') ident (':' type)?

method = ident (pat | '(' pat ':' type ')')+ '=' expr

item = stmt | expr

stmt = mut

mut = ident '<-' expr

expr = eq

eq = cmp (('==' | '!=') cmp)?

cmp = term (('<' | '>' | '<=' | '>=') term)?

term = factor (('+' | '-') term)?

factor = unary (('*' | '/' | '%') factor)?

unary = ('-' | '!')* apply

apply = atom+

atom = ident | lit | lambda | let | begin | if | match | '(' expr ')'

begin = 'begin' item+ 'end'

lambda = '\\' ident+ '=>' expr

let = "let" ident+ '=' expr "in" expr

if = "if" expr "then" expr "else" expr

match = "match" expr "with" ("|" case)* "\\" case

case = pat "->" expr

type = ident

pat = ident 
    | lit 
    | wildcard 
    | unit

ident = [a-zA-Z_][a-zA-Z0-9_]*

lit = number | bool

number = -?((0b[0-1]+)|(0o[0-7]+)|(0x[0-9a-fA-F]+)|([1-9]\d*|0))/-?((0b[0-1]+)|(0o[0-7]+)|(0x[0-9a-fA-F]+)|([1-9]\d*|0))

bool = "true" | "false"